# -*- coding:utf-8 -*-
from flask import Flask, request
import cairosvg
import os

app = Flask(__name__)


@app.route('/svg2png', methods=['POST'])
def hello_world():
    data = request.form.get('data')
    data_bytes = '<svg version="1.1" style="font-family:&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Arial, Helvetica, sans-serif;font-size:12px;" xmlns="http://www.w3.org/2000/svg" width="746" height="400"><desc>Created with Highcharts 4.2.5</desc><defs><clipPath id="highcharts-9"><rect x="0" y="0" width="689" height="309"></rect></clipPath></defs><rect x="0" y="0" width="746" height="400" fill="#FFFFFF" class=" highcharts-background"></rect><g class="highcharts-grid"></g><g class="highcharts-grid"><path fill="none" d="M 47 319.5 L 736 319.5" stroke="#D8D8D8" stroke-width="1" opacity="1"></path><path fill="none" d="M 47 257.5 L 736 257.5" stroke="#D8D8D8" stroke-width="1" opacity="1"></path><path fill="none" d="M 47 195.5 L 736 195.5" stroke="#D8D8D8" stroke-width="1" opacity="1"></path><path fill="none" d="M 47 134.5 L 736 134.5" stroke="#D8D8D8" stroke-width="1" opacity="1"></path><path fill="none" d="M 47 72.5 L 736 72.5" stroke="#D8D8D8" stroke-width="1" opacity="1"></path><path fill="none" d="M 47 9.5 L 736 9.5" stroke="#D8D8D8" stroke-width="1" opacity="1"></path></g><g class="highcharts-axis"><path fill="none" d="M 99.5 319 L 99.5 329" stroke="#C0D0E0" stroke-width="1" opacity="1"></path><path fill="none" d="M 213.5 319 L 213.5 329" stroke="#C0D0E0" stroke-width="1" opacity="1"></path><path fill="none" d="M 328.5 319 L 328.5 329" stroke="#C0D0E0" stroke-width="1" opacity="1"></path><path fill="none" d="M 442.5 319 L 442.5 329" stroke="#C0D0E0" stroke-width="1" opacity="1"></path><path fill="none" d="M 557.5 319 L 557.5 329" stroke="#C0D0E0" stroke-width="1" opacity="1"></path><path fill="none" d="M 671.5 319 L 671.5 329" stroke="#C0D0E0" stroke-width="1" opacity="1"></path><path fill="none" d="M 47 319.5 L 736 319.5" stroke="#C0D0E0" stroke-width="1"></path></g><g class="highcharts-axis"></g><g class="highcharts-series-group"><g class="highcharts-series highcharts-series-0" transform="translate(47,10) scale(1 1)" clip-path="url(#highcharts-9)"><path fill="none" d="M 6.7549019607843 307.757787864 L 18.203888334995 307.757787864 L 29.652874709206 309 L 41.101861083416 305.328711672 L 52.550847457627 309 L 63.999833831838 307.757787864 L 75.448820206049 306.5402982 L 86.897806580259 309 L 98.34679295447 307.757787864 L 109.79577932868 306.5402982 L 121.24476570289 309 L 132.6937520771 309 L 144.14273845131 307.757787864 L 155.59172482552 307.757787864 L 167.04071119973 307.757787864 L 178.48969757394 309 L 189.93868394816 305.292 L 201.38767032237 307.757787864 L 212.83665669658 306.528 L 224.28564307079 307.757787864 L 235.734629445 307.757787864 L 247.18361581921 309 L 258.63260219342 309 L 270.08158856763 306.528 L 281.53057494184 309 L 292.97956131605 309 L 304.42854769026 306.528 L 315.87753406447 309 L 327.32652043868 306.528 L 338.77550681289 306.528 L 350.22449318711 306.5155782 L 361.67347956132 307.757787864 L 373.12246593553 307.757787864 L 384.57145230974 309 L 396.02043868395 307.751513928 L 407.46942505816 307.757787864 L 418.91841143237 307.757787864 L 430.36739780658 306.528 L 441.81638418079 306.5402982 L 453.265370555 306.528 L 464.71435692921 307.757787864 L 476.16334330342 309 L 487.61232967763 306.528 L 499.06131605184 306.528 L 510.51030242606 307.764 L 521.95928880027 309 L 533.40827517448 309 L 544.85726154869 307.757787864 L 556.3062479229 307.757787864 L 567.75523429711 306.528 L 579.20422067132 307.757787864 L 590.65320704553 307.764 L 602.10219341974 307.764 L 613.55117979395 306.5402982 L 625.00016616816 307.757787864 L 636.44915254237 61.80000000000001 L 647.89813891658 61.80000000000001 L 659.34712529079 61.80000000000001 L 670.79611166501 61.80000000000001" stroke="#7cb5ec" stroke-width="2" stroke-linejoin="round" stroke-linecap="round"></path><path fill="none" d="M -3.2450980392156996 307.757787864 L 6.7549019607843 307.757787864 L 18.203888334995 307.757787864 L 29.652874709206 309 L 41.101861083416 305.328711672 L 52.550847457627 309 L 63.999833831838 307.757787864 L 75.448820206049 306.5402982 L 86.897806580259 309 L 98.34679295447 307.757787864 L 109.79577932868 306.5402982 L 121.24476570289 309 L 132.6937520771 309 L 144.14273845131 307.757787864 L 155.59172482552 307.757787864 L 167.04071119973 307.757787864 L 178.48969757394 309 L 189.93868394816 305.292 L 201.38767032237 307.757787864 L 212.83665669658 306.528 L 224.28564307079 307.757787864 L 235.734629445 307.757787864 L 247.18361581921 309 L 258.63260219342 309 L 270.08158856763 306.528 L 281.53057494184 309 L 292.97956131605 309 L 304.42854769026 306.528 L 315.87753406447 309 L 327.32652043868 306.528 L 338.77550681289 306.528 L 350.22449318711 306.5155782 L 361.67347956132 307.757787864 L 373.12246593553 307.757787864 L 384.57145230974 309 L 396.02043868395 307.751513928 L 407.46942505816 307.757787864 L 418.91841143237 307.757787864 L 430.36739780658 306.528 L 441.81638418079 306.5402982 L 453.265370555 306.528 L 464.71435692921 307.757787864 L 476.16334330342 309 L 487.61232967763 306.528 L 499.06131605184 306.528 L 510.51030242606 307.764 L 521.95928880027 309 L 533.40827517448 309 L 544.85726154869 307.757787864 L 556.3062479229 307.757787864 L 567.75523429711 306.528 L 579.20422067132 307.757787864 L 590.65320704553 307.764 L 602.10219341974 307.764 L 613.55117979395 306.5402982 L 625.00016616816 307.757787864 L 636.44915254237 61.80000000000001 L 647.89813891658 61.80000000000001 L 659.34712529079 61.80000000000001 L 670.79611166501 61.80000000000001 L 680.79611166501 61.80000000000001" stroke-linejoin="round" visibility="visible" stroke="rgba(192,192,192,0.0001)" stroke-width="22" class=" highcharts-tracker" style=""></path></g><g class="highcharts-markers highcharts-series-0 highcharts-tracker" transform="translate(47,10) scale(1 1)" clip-path="url(#highcharts-10)" style=""></g></g><g class="highcharts-legend" transform="translate(266,356)"><g><g><g class="highcharts-legend-item" transform="translate(8,3)"><path fill="none" d="M 0 11 L 16 11" stroke="#7cb5ec" stroke-width="2"></path><text x="21" style="color:#333333;font-size:12px;font-weight:bold;cursor:pointer;fill:#333333;" text-anchor="start" y="15">[zsf-test-customer]CPU使用率</text></g></g></g></g><g class="highcharts-axis-labels highcharts-xaxis-labels"><text x="99.55084745762713" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:135px;text-overflow:clip;" text-anchor="middle" transform="translate(0,0)" y="338" opacity="1">10:50</text><text x="214.04071119973415" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:135px;text-overflow:clip;" text-anchor="middle" transform="translate(0,0)" y="338" opacity="1">11:00</text><text x="328.53057494184117" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:135px;text-overflow:clip;" text-anchor="middle" transform="translate(0,0)" y="338" opacity="1">11:10</text><text x="443.02043868394816" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:135px;text-overflow:clip;" text-anchor="middle" transform="translate(0,0)" y="338" opacity="1">11:20</text><text x="557.5103024260552" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:135px;text-overflow:clip;" text-anchor="middle" transform="translate(0,0)" y="338" opacity="1">11:30</text><text x="672.0001661681622" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:135px;text-overflow:clip;" text-anchor="middle" transform="translate(0,0)" y="338" opacity="1">11:40</text></g><g class="highcharts-axis-labels highcharts-yaxis-labels"><text x="32" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:236px;text-overflow:clip;" text-anchor="end" transform="translate(0,0)" y="322" opacity="1">0</text><text x="32" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:236px;text-overflow:clip;" text-anchor="end" transform="translate(0,0)" y="260" opacity="1">25</text><text x="32" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:236px;text-overflow:clip;" text-anchor="end" transform="translate(0,0)" y="198" opacity="1">50</text><text x="32" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:236px;text-overflow:clip;" text-anchor="end" transform="translate(0,0)" y="136" opacity="1">75</text><text x="32" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:236px;text-overflow:clip;" text-anchor="end" transform="translate(0,0)" y="74" opacity="1">100</text><text x="32" style="color:#606060;cursor:default;font-size:11px;fill:#606060;width:236px;text-overflow:clip;" text-anchor="end" transform="translate(0,0)" y="13" opacity="1">125</text></g><g class="highcharts-tooltip" style="cursor:default;padding:0;pointer-events:none;white-space:nowrap;" transform="translate(0,-9999)"><path fill="none" d="M 3.5 0.5 L 13.5 0.5 C 16.5 0.5 16.5 0.5 16.5 3.5 L 16.5 13.5 C 16.5 16.5 16.5 16.5 13.5 16.5 L 3.5 16.5 C 0.5 16.5 0.5 16.5 0.5 13.5 L 0.5 3.5 C 0.5 0.5 0.5 0.5 3.5 0.5" isShadow="true" stroke="black" stroke-opacity="0.049999999999999996" stroke-width="5" transform="translate(1, 1)"></path><path fill="none" d="M 3.5 0.5 L 13.5 0.5 C 16.5 0.5 16.5 0.5 16.5 3.5 L 16.5 13.5 C 16.5 16.5 16.5 16.5 13.5 16.5 L 3.5 16.5 C 0.5 16.5 0.5 16.5 0.5 13.5 L 0.5 3.5 C 0.5 0.5 0.5 0.5 3.5 0.5" isShadow="true" stroke="black" stroke-opacity="0.09999999999999999" stroke-width="3" transform="translate(1, 1)"></path><path fill="none" d="M 3.5 0.5 L 13.5 0.5 C 16.5 0.5 16.5 0.5 16.5 3.5 L 16.5 13.5 C 16.5 16.5 16.5 16.5 13.5 16.5 L 3.5 16.5 C 0.5 16.5 0.5 16.5 0.5 13.5 L 0.5 3.5 C 0.5 0.5 0.5 0.5 3.5 0.5" isShadow="true" stroke="black" stroke-opacity="0.15" stroke-width="1" transform="translate(1, 1)"></path><path fill="rgba(249, 249, 249, .85)" d="M 3.5 0.5 L 13.5 0.5 C 16.5 0.5 16.5 0.5 16.5 3.5 L 16.5 13.5 C 16.5 16.5 16.5 16.5 13.5 16.5 L 3.5 16.5 C 0.5 16.5 0.5 16.5 0.5 13.5 L 0.5 3.5 C 0.5 0.5 0.5 0.5 3.5 0.5"></path><text x="8" style="font-size:12px;color:#333333;fill:#333333;" y="20"></text></g><text x="736" text-anchor="end" style="cursor:pointer;color:#909090;font-size:9px;fill:#909090;" y="395">51idc.com</text></svg>'.encode(
        encoding='utf-8')
    print(data_bytes)
    # cairosvg.svg2png(url="/home/zhangshaofu/MyProject/smart-svg2img/svgtest.svg", write_to="/home/zhangshaofu/Downloads/output.png")
    cairosvg.svg2png(bytestring=data_bytes,
                     write_to="/home/zhangshaofu/Downloads/output2.png")
    if data:
        pass
    else:
        pass
    return 'Hello World!'


if __name__ == '__main__':
    app.run(host="0.0.0.0", threaded=True, port=5679, debug=True)
